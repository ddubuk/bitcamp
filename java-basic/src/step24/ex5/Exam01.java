// 비동기 방식으로 인한 문제 및 해결책
package step24.ex5;

public class Exam01 {

    public static void main(String[] args) {
        Account account = new Account("111-11-1111-111", 100_0000);
        
        ATM 강남 = new ATM("강남", account);
        ATM 서초 = new ATM("서초", account);
        ATM 부산 = new ATM("부산", account);
        ATM 대전 = new ATM("대전", account);
        ATM 광주 = new ATM("광주", account);
        
        강남.start();
        서초.start();
        부산.start();
        대전.start();
        광주.start();
        
        // 강남, 서초 등 여러 개의 스레드가 같은 객체의 같은 메서드를 호출할 때
        // 서로 메모리의 값을 덮었는 문제 발생
        // 문제가 발생하는 코드들을 '크리티컬 섹션' 또는 '크리티컬 리젼', '임계구역'이라 부른다.
        // 해결책?
        // => 한 번에 한 스레드만이 변수의 값을 변경하도록 접근 제한하면 된다.
        // 주의!
        // => 동시에 여러 스레드가 같은 메모리에 대해 값을 조회할 때는 문제가 발생하지 않는다.
        
    }
}

// 크리티컬 섹션
// 여러 스레드가 동시에 실행할 때 문제가 발생하는 코드 블록을 말한다.
// 같은 메모리에 여러 스레드가 동시에 접근하여 값을 변경하려 할 때 문제가 발생
//
// 스레드 세이프
// 여러 스레드가 동시에 실행하더라도 아무런 문제가 되지 않는 코드를 말한다.
// 여러 스레드가 같은 메모리에 접근하더라도 읽기만 한다면 아무런 문제가 되지 않는다.
//
// 세마 포어
// 크리티컬 섹션에 접근하는 스레드의 수를 제어하는 기법
// semaphore(n)     // n은 갯수
// 오직 한 개만 접근가능
//
// 유텍스
// 크리티컬 섹션에 오직 한 개의 스레드 만이 접근하는 것을 말한다.
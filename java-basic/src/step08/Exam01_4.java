// 클래스 변수와 인스턴스 변수 생성 시점과 메모리 영역
package step08;

public class Exam01_4 {
    // 지금 당장 A 클래스 앞에 붙은 static은 고민하지 말라!
    // 이 예제의 목표는 스태틱 변수이다.
    class A {
        // 클래스 변수 = 스태틱 변수 
        // => 클래스를 로딩하는 순간 자동 생성된다. 
        //    클래스 이름으로 사용한다고 해서 "클래스에 소속된 변수", "클래스 변수"라 부른다.
        // => static이 붙은 변수이기 때문에 "스태틱 변수"라고도 부른다.
        // => 클래스와 함께 "Method Area" 영역에 존재한다. 
        static int v1;
        int v2; 
    }
    
    public static void main(String[] args) {
       A.v1 = 100; 
       
       // v2는 인스턴스 변수이기 때문에 사용하기 전에 new 명령으로 먼저 생성해야 한다.
       // A.v2 = 200; // 컴파일 오류!
       
       A p = new A(); // 이제 v2 변수는 Heap에 생성되었다.
       // A클래스의 인스턴스를 만들 때
       // static이 안 붙은 변수가 그 대상이다.
       
       // v2 인스턴스 변수는 인스턴스 주소를 통해 사용해야 한다.
       // 클래스 이름으로 사용할 수 없다.
       // A.v2 = 200; // 컴파일 오류!
       
      p.v2 = 200; // OK!
      
      // 인스턴스 변수는 인스턴스를 만들 때 마다 생성된다.
      A p2 = new A();
      p2.v2 = 300;
      
      System.out.printf("A.v1 = %d, p.v2 = %d, p2.v2 = %d\n", A.v1, p.v2, p2.v2);
       
    }
}

